{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\React-Project\\\\practice-api\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoding, setIsLoding] = useState(false);\n  const [error, setError] = useState(false);\n\n  async function LoadMoviesHandler() {\n    setIsLoding(true);\n    setError(null);\n\n    try {\n      const responce = await fetch('https://swapi.dev/api/film/');\n\n      if (!responce.ok) {\n        throw new Error(\"Somthing went wrong! Error Type 404\");\n      }\n\n      const data = await responce.json();\n      const changedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          director: movieData.director,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(changedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setIsLoding(false);\n  }\n\n  let content = /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"Oops Found Nothing, Click The button to lode movies.\");\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: LoadMoviesHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Load Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, !isLoding && movies.length > 0 && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: movies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 44\n    }\n  }), !isLoding && movies.length === 0 && !error && {\n    content\n  }, !isLoding && error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 32\n    }\n  }, error), isLoding && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 22\n    }\n  }, \"Loding...\")));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hp/OneDrive/Desktop/React-Project/practice-api/src/App.js"],"names":["React","useState","MoviesList","App","movies","setMovies","isLoding","setIsLoding","error","setError","LoadMoviesHandler","responce","fetch","ok","Error","data","json","changedMovies","results","map","movieData","id","episode_id","title","director","openingText","opening_crawl","releaseDate","release_date","message","content","length"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAqBR,QAAQ,CAAC,KAAD,CAAnC;;AAEA,iBAAeS,iBAAf,GAAmC;AACjCH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,QAAQ,CAAC,IAAD,CAAR;;AACA,QAAG;AACD,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEE,YAAMC,aAAa,GAAGF,IAAI,CAACG,OAAL,CAAaC,GAAb,CAAkBC,SAAD,IAAe;AACpD,eAAO;AACLC,UAAAA,EAAE,EAAED,SAAS,CAACE,UADT;AAELC,UAAAA,KAAK,EAAEH,SAAS,CAACG,KAFZ;AAGLC,UAAAA,QAAQ,EAAEJ,SAAS,CAACI,QAHf;AAILC,UAAAA,WAAW,EAAEL,SAAS,CAACM,aAJlB;AAKLC,UAAAA,WAAW,EAAEP,SAAS,CAACQ;AALlB,SAAP;AAOD,OARqB,CAAtB;AASAvB,MAAAA,SAAS,CAACY,aAAD,CAAT;AACH,KAnBD,CAmBC,OAAMT,KAAN,EAAa;AACZC,MAAAA,QAAQ,CAACD,KAAK,CAACqB,OAAP,CAAR;AACD;;AACDtB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AAED,MAAIuB,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAAd;AAGA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEpB,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACJ,QAAD,IAAaF,MAAM,CAAC2B,MAAP,GAAgB,CAA7B,iBAAkC,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAE3B,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrC,EAEG,CAACE,QAAD,IAAaF,MAAM,CAAC2B,MAAP,KAAkB,CAA/B,IAAqC,CAACvB,KAAtC,IAA+C;AAACsB,IAAAA;AAAD,GAFlD,EAGG,CAACxB,QAAD,IAAaE,KAAb,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,KAAJ,CAHzB,EAIGF,QAAQ,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJf,CAJF,CADF;AAaD;;AAED,eAAeH,GAAf","sourcesContent":["import React, {useState} from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoding, setIsLoding] = useState(false);\n  const [error, setError]  = useState(false);\n\n  async function LoadMoviesHandler() {\n    setIsLoding(true);\n    setError(null);\n    try{\n      const responce = await fetch('https://swapi.dev/api/film/');\n\n      if (!responce.ok) {\n        throw new Error(\"Somthing went wrong! Error Type 404\")\n      }\n\n      const data = await responce.json();\n\n        const changedMovies = data.results.map((movieData) => {\n          return {\n            id: movieData.episode_id,\n            title: movieData.title,\n            director: movieData.director,\n            openingText: movieData.opening_crawl,\n            releaseDate: movieData.release_date,\n          };\n        });\n        setMovies(changedMovies);\n    }catch(error) {\n      setError(error.message);\n    }\n    setIsLoding(false);\n  }\n\n  let content = <h3>Oops Found Nothing, Click The button to lode movies.</h3>\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={LoadMoviesHandler}>Load Movies</button>\n      </section>\n      <section>\n        {!isLoding && movies.length > 0 && <MoviesList movies={movies} />}\n        {!isLoding && movies.length === 0  && !error && {content}}\n        {!isLoding && error && <p>{error}</p>}\n        {isLoding && <h2>Loding...</h2>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}